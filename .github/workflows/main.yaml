name: Deploy Python App to Azure VM

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # ✅ Login to Azure
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: >
            {
              "clientId":"${{ secrets.AZURE_CLIENT_ID }}",
              "clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}",
              "tenantId":"${{ secrets.AZURE_TENANT_ID }}",
              "subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}"
            }

      # ✅ Get VM Public IP
      - name: Get VM Public IP
        run: |
          ip=$(az vm list-ip-addresses \
            --resource-group test-rg \
            --name test-vm \
            --query "[].virtualMachine.network.publicIpAddresses[0].ipAddress" \
            --output tsv)
          echo "VM Public IP: $ip"
          echo "ip=$ip" >> $GITHUB_ENV

      # ✅ Deploy and Restart App
      - name: Deploy and Restart App
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa azureuser@${{ env.ip }} << 'EOF'
            set -e

            # ✅ Update & Install Dependencies
            sudo apt update
            sudo apt install -y python3 python3-pip python3-venv git ufw

            # ✅ Clone/Pull Repository
            mkdir -p ~/app
            cd ~/app
            if [ ! -d .git ]; then
              git clone https://${{ secrets.TOKEN_GITHUB }}@github.com/Ayeesha208/three-tier-architecture-demo.git .
            else
              git pull origin main
            fi

            # ✅ Create Virtual Environment & Install Dependencies
            python3 -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install gunicorn flask

            # ✅ Fix systemd Service File
            sudo bash -c 'cat > /etc/systemd/system/myapp.service <<EOF2
            [Unit]
            Description=Gunicorn instance to serve my Python app
            After=network.target

            [Service]
            User=azureuser
            Group=www-data
            WorkingDirectory=/home/azureuser/app
            ExecStart=/home/azureuser/app/venv/bin/gunicorn --workers 3 --bind 0.0.0.0:5000 app:app
            Restart=always

            [Install]
            WantedBy=multi-user.target
            EOF2'

            # ✅ Reload & Restart Service
            sudo systemctl daemon-reload
            sudo systemctl enable myapp.service
            sudo systemctl restart myapp.service

            # ✅ Open Port 5000
            sudo ufw allow 5000/tcp
            sudo ufw reload
          EOF

      # ✅ Verify Deployment
      - name: Verify Deployment
        run: |
          sleep 5  # Wait for Gunicorn to start
          curl -I http://${{ env.ip }}:5000 || echo "Application is not responding"
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa azureuser@${{ env.ip }} "sudo systemctl status myapp.service || journalctl -u myapp.service -n 50 --no-pager"
