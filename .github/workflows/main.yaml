name: Deploy Flask App to Azure VM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AZURE_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.AZURE_VM_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to Azure VM
        run: |
          ssh ubuntu@${{ secrets.AZURE_VM_IP }} << 'EOF'
            set -e  # Exit if any command fails

            # Ensure dependencies are installed
            sudo apt update
            sudo apt install -y python3 python3-pip git

            # Ensure App Directory Exists
            mkdir -p ~/app
            cd ~/app

            # Handle First-Time Deployment & Updates
            if [ ! -d .git ]; then
                echo "First-time setup: Cloning repository..."
                git clone https://${{ secrets.TOKEN_GITHUB }}@github.com/Ayeesha208/three-tier-architecture-demo.git .
            else
                echo "Repository exists: Pulling latest changes..."
                git pull origin main
            fi

            # Ensure Virtual Environment Exists
            if [ ! -d venv ]; then
                python3 -m venv venv
            fi
            source venv/bin/activate

            # Install Dependencies
            pip install --upgrade pip
            pip install flask

            # Ensure app.py exists (Fixed Syntax)
            if [ ! -f app.py ]; then
                cat > app.py <<EOPYTHON
from flask import Flask

app = Flask(__name__)

@app.route('/')
def home():
    return "Hello from Flask on Azure VM!"

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
EOPYTHON
            fi

            # Kill any existing Flask processes
            pkill -f "python3 app.py" || true

            # Run the Flask App
            echo "Starting Flask App..."
            nohup python3 app.py > app.log 2>&1 &
            disown
            echo "Deployment completed successfully!"
          EOF
